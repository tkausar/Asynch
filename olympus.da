import sys
Replica = import_da('replica')
Client = import_da('client')
replicaList = []
clientList = []

class Olympus(process):
  def getReplicaList(t):
  	numberOfReplica = (2*t) + 1;
  	for counter in range(1,numberOfReplica+1):
  		if(counter == 1):
  			r = new(Replica.Replica, args=(counter, True, False), at='node2')
  		elif (counter == numberOfReplica):
  			 r = new(Replica.Replica, args=(counter, False, True), at='node2')
  		else:
  			 r = new(Replica.Replica, args=(counter, False, False), at='node2')
  		replica = {}
  		replica["id"] = counter
  		replica["obj"] = r
  		replicaList.append(replica)
  	return replicaList;

  def getClientList(count):
  	for counter in range(1,count+1):
  		workloadKey = 'workload[' + str(counter-1) + ']'
  		c = new(Client.Client, args=(counter, config[workloadKey]), at='node3')
  		client = {}
  		client["id"] = counter
  		client["obj"] = c
  		clientList.append(client)
  	return clientList;

  def sendReplicaListToClient():
  	output("Sending Replica list to client")
  	for each in clientList:
  		output("Sending replica to ", each["obj"])
  		send(('setupClient',replicaList,), to=each["obj"])

  def sendReplicaListToReplica():
  	output("Sending Replica list to all replica")
  	for each in replicaList:
  		output("Sending replica to ", each["obj"])
  		send(('setupReplica',replicaList,clientList,), to=each["obj"])

  def setup(config):
  	output("Setting up replica")
  	replicaList = getReplicaList(config["t"])
  	output("Setting up client")
  	clientList = getClientList(config["num_client"])
  	sendReplicaListToClient()
  	sendReplicaListToReplica()
 
  def run():
  	for each in clientList:
                start(each["obj"])
  	for each in replicaList:
  		start(each["obj"])
  	output("Olympus is started.")
