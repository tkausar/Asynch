
Replica 1 setup done
Running Replica 1
Received message from Olympus : 
ReplicaList [{'obj': {<Replica:b9402#node2>}, 'id': 1}, {'obj': {<Replica:b9403#node2>}, 'id': 2}, {'obj': {<Replica:b9404#node2>}, 'id': 3}]
clientList: [{'obj': {<Client:67002#node3>}, 'id': 1}, {'obj': {<Client:67003#node3>}, 'id': 2}]

Received signed request from client :<Client:67002#node3>
Decrypted request: put('movie','star')
Head Replica: Created slot number 1
Processing request: put('movie','star')
Processed request result: OK
Created OrderProof with signed oredrStatement
Creating a hash of result
Created ResultProof with signed resultStatement
Added operation to replica's history
Appended orderProof and resultproof to shuttle
Current Database : {'movie': 'star'}
Sending shuttle to next Replica : {<Replica:b9403#node2>} with request put('movie','star')

Received retransmit signed request from client :<Client:67002#node3>
Decrypted request: put('movie','star')
Checking in replica's cache...

Received signed request from client :<Client:67003#node3>
Decrypted request: put('jedi','luke skywalker')
Head Replica: Created slot number 2
Processing request: put('jedi','luke skywalker')
Processed request result: OK
Created OrderProof with signed oredrStatement
Creating a hash of result
Created ResultProof with signed resultStatement
Added operation to replica's history
Appended orderProof and resultproof to shuttle
Current Database : {'movie': 'star', 'jedi': 'luke skywalker'}
Sending shuttle to next Replica : {<Replica:b9403#node2>} with request put('jedi','luke skywalker')

Received retransmit signed request from client :<Client:67003#node3>
Decrypted request: put('jedi','luke skywalker')
Checking in replica's cache...

Received signed request from client :<Client:67002#node3>
Decrypted request: append('movie',' wars')
Head Replica: Created slot number 3
Processing request: append('movie',' wars')
Processed request result: OK
Created OrderProof with signed oredrStatement
Creating a hash of result
Created ResultProof with signed resultStatement
Added operation to replica's history
Appended orderProof and resultproof to shuttle
Current Database : {'movie': 'star wars', 'jedi': 'luke skywalker'}
Sending shuttle to next Replica : {<Replica:b9403#node2>} with request append('movie',' wars')

Received signed request from client :<Client:67003#node3>
Decrypted request: slice('jedi','0:4')
Head Replica: Created slot number 4
Processing request: slice('jedi','0:4')
Processed request result: OK
Created OrderProof with signed oredrStatement
Creating a hash of result
Created ResultProof with signed resultStatement
Added operation to replica's history
Appended orderProof and resultproof to shuttle
Current Database : {'movie': 'star wars', 'jedi': 'luke'}
Sending shuttle to next Replica : {<Replica:b9403#node2>} with request slice('jedi','0:4')

Received retransmit signed request from client :<Client:67002#node3>
Decrypted request: append('movie',' wars')
Checking in replica's cache...

Received retransmit signed request from replica :<Replica:b9403#node2>
Decrypted request: put('movie','star')
Awaiting for result shuttle...

Received retransmit signed request from replica :<Replica:b9403#node2>
Decrypted request: put('jedi','luke skywalker')
Awaiting for result shuttle...

Received retransmit signed request from client :<Client:67003#node3>
Decrypted request: slice('jedi','0:4')
Checking in replica's cache...
Head replica timeout for operation : put('jedi','luke skywalker')

Received signed request from client :<Client:67002#node3>
Decrypted request: get('movie')
Head Replica: Created slot number 5
Processing request: get('movie')
Processed request result: star wars
Created OrderProof with signed oredrStatement
Creating a hash of result
Created ResultProof with signed resultStatement
Added operation to replica's history
Appended orderProof and resultproof to shuttle
Current Database : {'movie': 'star wars', 'jedi': 'luke'}
Sending shuttle to next Replica : {<Replica:b9403#node2>} with request get('movie')
Head replica timeout for operation : put('movie','star')
